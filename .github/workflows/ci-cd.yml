name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCE_INSTANCE: bitcoin-explorer
  GCE_INSTANCE_ZONE: us-central1-a  # Replace with your instance's zone

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'  # This will checkout all submodules recursively

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push backend image
      uses: docker/build-push-action@v2
      with:
        context: ./RustClientAdapter
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/bitcoin-explorer-backend:latest

    - name: Build and push frontend image
      uses: docker/build-push-action@v2
      with:
        context: ./ui
        file: ./ui/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/bitcoin-explorer-frontend:latest
        build-args: |
          VITE_API_URL=http://34.31.232.228:3001

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Set up SSH key
      uses: webfactory/ssh-agent@v0.5.0
      with:
        ssh-private-key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}

    - name: Add instance to known hosts
      run: ssh-keyscan -H ${{ secrets.GCP_INSTANCE_IP }} >> ~/.ssh/known_hosts

    - name: Deploy to GCP instance
      run: |
        ssh shihongji21@${{ secrets.GCP_INSTANCE_IP }} '
          cd ~
          docker-compose down || true
          docker system prune -af || true
          docker volume prune -f || true
          docker-compose pull
          docker-compose up -d db
          echo "Waiting for database to initialize..."
          sleep 90
          docker-compose up -d
          docker image prune -af
        '
